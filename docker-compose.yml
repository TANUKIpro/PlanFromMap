version: '3.8'

services:
  # Backend API Server
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: semantic-map-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=sqlite:///app/data/semantic_map.db
      - API_PORT=3000
      - LOG_LEVEL=debug
      - CORS_ORIGIN=http://localhost:5173
    volumes:
      - ./apps/backend:/app
      - ./packages:/packages
      - ./data:/app/data
      - backend_node_modules:/app/node_modules
    networks:
      - semantic-map-net
    depends_on:
      - redis
    command: npm run dev

  # Frontend Web Application  
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile.dev
    container_name: semantic-map-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:3000/api
      - VITE_WS_URL=ws://localhost:3000
    volumes:
      - ./apps/frontend:/app
      - ./packages:/packages
      - frontend_node_modules:/app/node_modules
    networks:
      - semantic-map-net
    command: npm run dev

  # ROS Bridge (Optional - enable if ROS is needed)
  ros-bridge:
    build:
      context: ./apps/ros-bridge
      dockerfile: Dockerfile
    container_name: semantic-map-ros-bridge
    ports:
      - "9090:9090"
      - "11311:11311"
    environment:
      - ROS_MASTER_URI=http://localhost:11311
      - ROS_HOSTNAME=ros-bridge
      - API_URL=http://backend:3000
    volumes:
      - ./apps/ros-bridge:/app
    networks:
      - semantic-map-net
    profiles:
      - ros
    command: roslaunch rosbridge_server rosbridge_websocket.launch

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: semantic-map-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - semantic-map-net
    command: redis-server --appendonly yes

  # PostgreSQL (Production Database - Optional)
  postgres:
    image: postgres:15-alpine
    container_name: semantic-map-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=semantic_map
      - POSTGRES_USER=semantic_map_user
      - POSTGRES_PASSWORD=change_me_in_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - semantic-map-net
    profiles:
      - production

  # Nginx (Production Reverse Proxy - Optional)
  nginx:
    image: nginx:alpine
    container_name: semantic-map-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./apps/frontend/dist:/usr/share/nginx/html
      - ./certs:/etc/nginx/certs
    networks:
      - semantic-map-net
    depends_on:
      - backend
      - frontend
    profiles:
      - production

  # Development Database UI (Optional)
  adminer:
    image: adminer
    container_name: semantic-map-adminer
    ports:
      - "8080:8080"
    networks:
      - semantic-map-net
    profiles:
      - dev-tools

networks:
  semantic-map-net:
    driver: bridge

volumes:
  backend_node_modules:
  frontend_node_modules:
  redis_data:
  postgres_data:
